% This program tests all forms of loops
% Authors: Jathu Satkunarajah (satkun16), Yang Song (songyan9)

{
	% Variable declarations
	var I : Integer
	var J : Integer

	% -------------------------------------------------------------------------
	% Basic increment from 0 to 5 with while
	% -------------------------------------------------------------------------

	write "while loop: 0 to 5"
	I := 0
	while I <= 5 do
		write I
		I := I + 1

	% -------------------------------------------------------------------------
	% Basic increment from 0 to 5 with repeat
	% -------------------------------------------------------------------------

	write "repeat loop: 0 to 5"
	I := 0
	repeat
		write I
		I := I + 1
	until I <= 5

	% -------------------------------------------------------------------------
	% While loop with exit
	% -------------------------------------------------------------------------

	write "while loop with exit at 3"
	I := 0
	while I <= 5 do {
		if I = 3 then {
			write "while loop exit"
			exit
		} else {
			write I
			I := I + 1
		}
	}
		
	% -------------------------------------------------------------------------
	% Nested while loops with integer exit
	% -------------------------------------------------------------------------

	write "nested loop with exit at 3"
	I := 0
	while true do {	
		while I <= 5 do {
			if I = 3 then {
				write "while loop exit"
				exit 2
			} else {
				write I
				I := I + 1
			}
		}
	}

	% -------------------------------------------------------------------------
	% While loop with exit when condition is true
	% -------------------------------------------------------------------------

	write "while loop with exit when 3"
	I := 0
	while I <= 5 do {
		exit when I = 3

		write I
		I := I + 1
	}
	
	% -------------------------------------------------------------------------
	% Repeat loop nested in a while loop, with integer exit when condition is true
	% -------------------------------------------------------------------------
	
	write "nested while loops with exit at 3"
	I := 0
	while true do {	
		repeat {
			exit 2 when I = 3
			
			write I
			I := I + 1
		} until I <= 5
	}

	% -------------------------------------------------------------------------
	% Nested while and repeat loop. Returns: 0,0,0,1,2,3,2,4,6
	% -------------------------------------------------------------------------

	write "nested while and repeat loop"
	I := 0
	while X < 3 do {
		J := 1
		
		repeat {
			write I*J
			J := J + 1
		} until  J <= 3

		I := I + 1
	}
}